import * as React from "react"
import { addPropertyControls, ControlType, motion } from "framer"
import * as Icons from "react-feather"
import { defaultEvents, NullState, useIconSelection } from "./utils"

/*
 ** ICON
 */

export interface IconProps {
    width: number
    height: number
    color: string
    selectByList: boolean
    iconSearch: string
    iconSelection: string
    onTap?: any
    onClick?: any
    onMouseEnter?: any
    onMouseLeave?: any
    onMouseDown?: any
    onMouseUp?: any
}

export function Icon(props: IconProps) {
    const {
        width,
        height,
        color,
        selectByList,
        iconSearch,
        iconSelection,
        onClick,
        onMouseDown,
        onMouseUp,
        onMouseEnter,
        onMouseLeave,
    } = props

    const Icon = useIconSelection<any>(
        Icons,
        selectByList,
        iconSearch,
        iconSelection
    )

    return (
        <motion.div
            style={{ display: "contents" }}
            {...{ onClick, onMouseEnter, onMouseLeave, onMouseDown, onMouseUp }}
        >
            {Icon ? (
                <Icon
                    style={{
                        position: "absolute",
                        top: 0,
                        left: 0,
                        width: "100%",
                        height: "100%",
                    }}
                    icon={name}
                    width={width}
                    height={height}
                    color={color}
                />
            ) : (
                <NullState />
            )}
        </motion.div>
    )
}

Icon.defaultProps = {
    width: 24,
    height: 24,
    iconSelection: "Home",
    iconSearch: "Home",
    color: "#66F",
    selectByList: true,
}

Icon.displayName = "Icon"

addPropertyControls(Icon, {
    selectByList: {
        type: ControlType.Boolean,
        title: "Select",
        enabledTitle: "List",
        disabledTitle: "Search",
    },
    iconSelection: {
        type: ControlType.Enum,
        options: Object.keys(Icons),
        defaultValue: Icon.defaultProps.iconSelection,
        title: "Name",
        hidden: ({ selectByList }) => !selectByList,
    },
    iconSearch: {
        type: ControlType.String,
        title: "Name",
        placeholder: "Menu, Wifi, Boxâ€¦",
        hidden: ({ selectByList }) => selectByList,
    },
    color: { type: ControlType.Color, title: "Color" },
    ...defaultEvents,
})
